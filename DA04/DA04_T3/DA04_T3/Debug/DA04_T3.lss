
DA04_T3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000354  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000687  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f8  00000000  00000000  00000abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000224  00000000  00000000  000010b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034a  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  0000164a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 a8 01 	jmp	0x350	; 0x350 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <util/delay.h> // delays

int main(void) {

	// set ports
	DDRB = 0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	84 b9       	out	0x04, r24	; 4

	// ADMUX and ADC config
	ADMUX = 0; // use ADC0
  84:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0x87; // enable ADC, system clock used for A/D conversion
  88:	87 e8       	ldi	r24, 0x87	; 135
  8a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0x00; // free running mode
  8e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>

	// timer config, ICR1 = TOP
	TCCR1A |= (1 << COM1A1) | (1 << COM1B1) |  (1 << WGM11); // Non-inverted PWM
  92:	e0 e8       	ldi	r30, 0x80	; 128
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	82 6a       	ori	r24, 0xA2	; 162
  9a:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM13) | (1 << WGM12);  // Fast PWM mode
  9c:	e1 e8       	ldi	r30, 0x81	; 129
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	88 61       	ori	r24, 0x18	; 24
  a4:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS11) | (1 << CS10); // Prescaler 64
  a6:	80 81       	ld	r24, Z
  a8:	83 60       	ori	r24, 0x03	; 3
  aa:	80 83       	st	Z, r24
	ICR1 = 2500; // top
  ac:	84 ec       	ldi	r24, 0xC4	; 196
  ae:	99 e0       	ldi	r25, 0x09	; 9
  b0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
  b4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	
	while (1)
	{
			ADCSRA |= (1 << ADSC); // start ADC conversion
  b8:	ca e7       	ldi	r28, 0x7A	; 122
  ba:	d0 e0       	ldi	r29, 0x00	; 0
			while( (ADCSRA&(1<<ADIF)) == 0 ); // wait for conversion to finish
			OCR1B = ADC * 0.3; // approximate value for pot. to rotate servo 180 degrees
  bc:	0f 2e       	mov	r0, r31
  be:	f8 e7       	ldi	r31, 0x78	; 120
  c0:	ef 2e       	mov	r14, r31
  c2:	f1 2c       	mov	r15, r1
  c4:	f0 2d       	mov	r31, r0
  c6:	0a e8       	ldi	r16, 0x8A	; 138
  c8:	10 e0       	ldi	r17, 0x00	; 0
	TCCR1B |= (1 << CS11) | (1 << CS10); // Prescaler 64
	ICR1 = 2500; // top
	
	while (1)
	{
			ADCSRA |= (1 << ADSC); // start ADC conversion
  ca:	88 81       	ld	r24, Y
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	88 83       	st	Y, r24
			while( (ADCSRA&(1<<ADIF)) == 0 ); // wait for conversion to finish
  d0:	88 81       	ld	r24, Y
  d2:	84 ff       	sbrs	r24, 4
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <main+0x50>
			OCR1B = ADC * 0.3; // approximate value for pot. to rotate servo 180 degrees
  d6:	f7 01       	movw	r30, r14
  d8:	60 81       	ld	r22, Z
  da:	71 81       	ldd	r23, Z+1	; 0x01
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 ad 00 	call	0x15a	; 0x15a <__floatunsisf>
  e4:	2a e9       	ldi	r18, 0x9A	; 154
  e6:	39 e9       	ldi	r19, 0x99	; 153
  e8:	49 e9       	ldi	r20, 0x99	; 153
  ea:	5e e3       	ldi	r21, 0x3E	; 62
  ec:	0e 94 13 01 	call	0x226	; 0x226 <__mulsf3>
  f0:	0e 94 7e 00 	call	0xfc	; 0xfc <__fixunssfsi>
  f4:	f8 01       	movw	r30, r16
  f6:	71 83       	std	Z+1, r23	; 0x01
  f8:	60 83       	st	Z, r22
	}
  fa:	e7 cf       	rjmp	.-50     	; 0xca <main+0x4a>

000000fc <__fixunssfsi>:
  fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__fp_splitA>
 100:	88 f0       	brcs	.+34     	; 0x124 <__fixunssfsi+0x28>
 102:	9f 57       	subi	r25, 0x7F	; 127
 104:	98 f0       	brcs	.+38     	; 0x12c <__fixunssfsi+0x30>
 106:	b9 2f       	mov	r27, r25
 108:	99 27       	eor	r25, r25
 10a:	b7 51       	subi	r27, 0x17	; 23
 10c:	b0 f0       	brcs	.+44     	; 0x13a <__fixunssfsi+0x3e>
 10e:	e1 f0       	breq	.+56     	; 0x148 <__fixunssfsi+0x4c>
 110:	66 0f       	add	r22, r22
 112:	77 1f       	adc	r23, r23
 114:	88 1f       	adc	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	1a f0       	brmi	.+6      	; 0x120 <__fixunssfsi+0x24>
 11a:	ba 95       	dec	r27
 11c:	c9 f7       	brne	.-14     	; 0x110 <__fixunssfsi+0x14>
 11e:	14 c0       	rjmp	.+40     	; 0x148 <__fixunssfsi+0x4c>
 120:	b1 30       	cpi	r27, 0x01	; 1
 122:	91 f0       	breq	.+36     	; 0x148 <__fixunssfsi+0x4c>
 124:	0e 94 0c 01 	call	0x218	; 0x218 <__fp_zero>
 128:	b1 e0       	ldi	r27, 0x01	; 1
 12a:	08 95       	ret
 12c:	0c 94 0c 01 	jmp	0x218	; 0x218 <__fp_zero>
 130:	67 2f       	mov	r22, r23
 132:	78 2f       	mov	r23, r24
 134:	88 27       	eor	r24, r24
 136:	b8 5f       	subi	r27, 0xF8	; 248
 138:	39 f0       	breq	.+14     	; 0x148 <__fixunssfsi+0x4c>
 13a:	b9 3f       	cpi	r27, 0xF9	; 249
 13c:	cc f3       	brlt	.-14     	; 0x130 <__fixunssfsi+0x34>
 13e:	86 95       	lsr	r24
 140:	77 95       	ror	r23
 142:	67 95       	ror	r22
 144:	b3 95       	inc	r27
 146:	d9 f7       	brne	.-10     	; 0x13e <__fixunssfsi+0x42>
 148:	3e f4       	brtc	.+14     	; 0x158 <__fixunssfsi+0x5c>
 14a:	90 95       	com	r25
 14c:	80 95       	com	r24
 14e:	70 95       	com	r23
 150:	61 95       	neg	r22
 152:	7f 4f       	sbci	r23, 0xFF	; 255
 154:	8f 4f       	sbci	r24, 0xFF	; 255
 156:	9f 4f       	sbci	r25, 0xFF	; 255
 158:	08 95       	ret

0000015a <__floatunsisf>:
 15a:	e8 94       	clt
 15c:	09 c0       	rjmp	.+18     	; 0x170 <__floatsisf+0x12>

0000015e <__floatsisf>:
 15e:	97 fb       	bst	r25, 7
 160:	3e f4       	brtc	.+14     	; 0x170 <__floatsisf+0x12>
 162:	90 95       	com	r25
 164:	80 95       	com	r24
 166:	70 95       	com	r23
 168:	61 95       	neg	r22
 16a:	7f 4f       	sbci	r23, 0xFF	; 255
 16c:	8f 4f       	sbci	r24, 0xFF	; 255
 16e:	9f 4f       	sbci	r25, 0xFF	; 255
 170:	99 23       	and	r25, r25
 172:	a9 f0       	breq	.+42     	; 0x19e <__floatsisf+0x40>
 174:	f9 2f       	mov	r31, r25
 176:	96 e9       	ldi	r25, 0x96	; 150
 178:	bb 27       	eor	r27, r27
 17a:	93 95       	inc	r25
 17c:	f6 95       	lsr	r31
 17e:	87 95       	ror	r24
 180:	77 95       	ror	r23
 182:	67 95       	ror	r22
 184:	b7 95       	ror	r27
 186:	f1 11       	cpse	r31, r1
 188:	f8 cf       	rjmp	.-16     	; 0x17a <__floatsisf+0x1c>
 18a:	fa f4       	brpl	.+62     	; 0x1ca <__floatsisf+0x6c>
 18c:	bb 0f       	add	r27, r27
 18e:	11 f4       	brne	.+4      	; 0x194 <__floatsisf+0x36>
 190:	60 ff       	sbrs	r22, 0
 192:	1b c0       	rjmp	.+54     	; 0x1ca <__floatsisf+0x6c>
 194:	6f 5f       	subi	r22, 0xFF	; 255
 196:	7f 4f       	sbci	r23, 0xFF	; 255
 198:	8f 4f       	sbci	r24, 0xFF	; 255
 19a:	9f 4f       	sbci	r25, 0xFF	; 255
 19c:	16 c0       	rjmp	.+44     	; 0x1ca <__floatsisf+0x6c>
 19e:	88 23       	and	r24, r24
 1a0:	11 f0       	breq	.+4      	; 0x1a6 <__floatsisf+0x48>
 1a2:	96 e9       	ldi	r25, 0x96	; 150
 1a4:	11 c0       	rjmp	.+34     	; 0x1c8 <__floatsisf+0x6a>
 1a6:	77 23       	and	r23, r23
 1a8:	21 f0       	breq	.+8      	; 0x1b2 <__floatsisf+0x54>
 1aa:	9e e8       	ldi	r25, 0x8E	; 142
 1ac:	87 2f       	mov	r24, r23
 1ae:	76 2f       	mov	r23, r22
 1b0:	05 c0       	rjmp	.+10     	; 0x1bc <__floatsisf+0x5e>
 1b2:	66 23       	and	r22, r22
 1b4:	71 f0       	breq	.+28     	; 0x1d2 <__floatsisf+0x74>
 1b6:	96 e8       	ldi	r25, 0x86	; 134
 1b8:	86 2f       	mov	r24, r22
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	60 e0       	ldi	r22, 0x00	; 0
 1be:	2a f0       	brmi	.+10     	; 0x1ca <__floatsisf+0x6c>
 1c0:	9a 95       	dec	r25
 1c2:	66 0f       	add	r22, r22
 1c4:	77 1f       	adc	r23, r23
 1c6:	88 1f       	adc	r24, r24
 1c8:	da f7       	brpl	.-10     	; 0x1c0 <__floatsisf+0x62>
 1ca:	88 0f       	add	r24, r24
 1cc:	96 95       	lsr	r25
 1ce:	87 95       	ror	r24
 1d0:	97 f9       	bld	r25, 7
 1d2:	08 95       	ret

000001d4 <__fp_split3>:
 1d4:	57 fd       	sbrc	r21, 7
 1d6:	90 58       	subi	r25, 0x80	; 128
 1d8:	44 0f       	add	r20, r20
 1da:	55 1f       	adc	r21, r21
 1dc:	59 f0       	breq	.+22     	; 0x1f4 <__fp_splitA+0x10>
 1de:	5f 3f       	cpi	r21, 0xFF	; 255
 1e0:	71 f0       	breq	.+28     	; 0x1fe <__fp_splitA+0x1a>
 1e2:	47 95       	ror	r20

000001e4 <__fp_splitA>:
 1e4:	88 0f       	add	r24, r24
 1e6:	97 fb       	bst	r25, 7
 1e8:	99 1f       	adc	r25, r25
 1ea:	61 f0       	breq	.+24     	; 0x204 <__fp_splitA+0x20>
 1ec:	9f 3f       	cpi	r25, 0xFF	; 255
 1ee:	79 f0       	breq	.+30     	; 0x20e <__fp_splitA+0x2a>
 1f0:	87 95       	ror	r24
 1f2:	08 95       	ret
 1f4:	12 16       	cp	r1, r18
 1f6:	13 06       	cpc	r1, r19
 1f8:	14 06       	cpc	r1, r20
 1fa:	55 1f       	adc	r21, r21
 1fc:	f2 cf       	rjmp	.-28     	; 0x1e2 <__fp_split3+0xe>
 1fe:	46 95       	lsr	r20
 200:	f1 df       	rcall	.-30     	; 0x1e4 <__fp_splitA>
 202:	08 c0       	rjmp	.+16     	; 0x214 <__fp_splitA+0x30>
 204:	16 16       	cp	r1, r22
 206:	17 06       	cpc	r1, r23
 208:	18 06       	cpc	r1, r24
 20a:	99 1f       	adc	r25, r25
 20c:	f1 cf       	rjmp	.-30     	; 0x1f0 <__fp_splitA+0xc>
 20e:	86 95       	lsr	r24
 210:	71 05       	cpc	r23, r1
 212:	61 05       	cpc	r22, r1
 214:	08 94       	sec
 216:	08 95       	ret

00000218 <__fp_zero>:
 218:	e8 94       	clt

0000021a <__fp_szero>:
 21a:	bb 27       	eor	r27, r27
 21c:	66 27       	eor	r22, r22
 21e:	77 27       	eor	r23, r23
 220:	cb 01       	movw	r24, r22
 222:	97 f9       	bld	r25, 7
 224:	08 95       	ret

00000226 <__mulsf3>:
 226:	0e 94 26 01 	call	0x24c	; 0x24c <__mulsf3x>
 22a:	0c 94 97 01 	jmp	0x32e	; 0x32e <__fp_round>
 22e:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscA>
 232:	38 f0       	brcs	.+14     	; 0x242 <__mulsf3+0x1c>
 234:	0e 94 90 01 	call	0x320	; 0x320 <__fp_pscB>
 238:	20 f0       	brcs	.+8      	; 0x242 <__mulsf3+0x1c>
 23a:	95 23       	and	r25, r21
 23c:	11 f0       	breq	.+4      	; 0x242 <__mulsf3+0x1c>
 23e:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 242:	0c 94 86 01 	jmp	0x30c	; 0x30c <__fp_nan>
 246:	11 24       	eor	r1, r1
 248:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__fp_szero>

0000024c <__mulsf3x>:
 24c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <__fp_split3>
 250:	70 f3       	brcs	.-36     	; 0x22e <__mulsf3+0x8>

00000252 <__mulsf3_pse>:
 252:	95 9f       	mul	r25, r21
 254:	c1 f3       	breq	.-16     	; 0x246 <__mulsf3+0x20>
 256:	95 0f       	add	r25, r21
 258:	50 e0       	ldi	r21, 0x00	; 0
 25a:	55 1f       	adc	r21, r21
 25c:	62 9f       	mul	r22, r18
 25e:	f0 01       	movw	r30, r0
 260:	72 9f       	mul	r23, r18
 262:	bb 27       	eor	r27, r27
 264:	f0 0d       	add	r31, r0
 266:	b1 1d       	adc	r27, r1
 268:	63 9f       	mul	r22, r19
 26a:	aa 27       	eor	r26, r26
 26c:	f0 0d       	add	r31, r0
 26e:	b1 1d       	adc	r27, r1
 270:	aa 1f       	adc	r26, r26
 272:	64 9f       	mul	r22, r20
 274:	66 27       	eor	r22, r22
 276:	b0 0d       	add	r27, r0
 278:	a1 1d       	adc	r26, r1
 27a:	66 1f       	adc	r22, r22
 27c:	82 9f       	mul	r24, r18
 27e:	22 27       	eor	r18, r18
 280:	b0 0d       	add	r27, r0
 282:	a1 1d       	adc	r26, r1
 284:	62 1f       	adc	r22, r18
 286:	73 9f       	mul	r23, r19
 288:	b0 0d       	add	r27, r0
 28a:	a1 1d       	adc	r26, r1
 28c:	62 1f       	adc	r22, r18
 28e:	83 9f       	mul	r24, r19
 290:	a0 0d       	add	r26, r0
 292:	61 1d       	adc	r22, r1
 294:	22 1f       	adc	r18, r18
 296:	74 9f       	mul	r23, r20
 298:	33 27       	eor	r19, r19
 29a:	a0 0d       	add	r26, r0
 29c:	61 1d       	adc	r22, r1
 29e:	23 1f       	adc	r18, r19
 2a0:	84 9f       	mul	r24, r20
 2a2:	60 0d       	add	r22, r0
 2a4:	21 1d       	adc	r18, r1
 2a6:	82 2f       	mov	r24, r18
 2a8:	76 2f       	mov	r23, r22
 2aa:	6a 2f       	mov	r22, r26
 2ac:	11 24       	eor	r1, r1
 2ae:	9f 57       	subi	r25, 0x7F	; 127
 2b0:	50 40       	sbci	r21, 0x00	; 0
 2b2:	9a f0       	brmi	.+38     	; 0x2da <__mulsf3_pse+0x88>
 2b4:	f1 f0       	breq	.+60     	; 0x2f2 <__mulsf3_pse+0xa0>
 2b6:	88 23       	and	r24, r24
 2b8:	4a f0       	brmi	.+18     	; 0x2cc <__mulsf3_pse+0x7a>
 2ba:	ee 0f       	add	r30, r30
 2bc:	ff 1f       	adc	r31, r31
 2be:	bb 1f       	adc	r27, r27
 2c0:	66 1f       	adc	r22, r22
 2c2:	77 1f       	adc	r23, r23
 2c4:	88 1f       	adc	r24, r24
 2c6:	91 50       	subi	r25, 0x01	; 1
 2c8:	50 40       	sbci	r21, 0x00	; 0
 2ca:	a9 f7       	brne	.-22     	; 0x2b6 <__mulsf3_pse+0x64>
 2cc:	9e 3f       	cpi	r25, 0xFE	; 254
 2ce:	51 05       	cpc	r21, r1
 2d0:	80 f0       	brcs	.+32     	; 0x2f2 <__mulsf3_pse+0xa0>
 2d2:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 2d6:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__fp_szero>
 2da:	5f 3f       	cpi	r21, 0xFF	; 255
 2dc:	e4 f3       	brlt	.-8      	; 0x2d6 <__mulsf3_pse+0x84>
 2de:	98 3e       	cpi	r25, 0xE8	; 232
 2e0:	d4 f3       	brlt	.-12     	; 0x2d6 <__mulsf3_pse+0x84>
 2e2:	86 95       	lsr	r24
 2e4:	77 95       	ror	r23
 2e6:	67 95       	ror	r22
 2e8:	b7 95       	ror	r27
 2ea:	f7 95       	ror	r31
 2ec:	e7 95       	ror	r30
 2ee:	9f 5f       	subi	r25, 0xFF	; 255
 2f0:	c1 f7       	brne	.-16     	; 0x2e2 <__mulsf3_pse+0x90>
 2f2:	fe 2b       	or	r31, r30
 2f4:	88 0f       	add	r24, r24
 2f6:	91 1d       	adc	r25, r1
 2f8:	96 95       	lsr	r25
 2fa:	87 95       	ror	r24
 2fc:	97 f9       	bld	r25, 7
 2fe:	08 95       	ret

00000300 <__fp_inf>:
 300:	97 f9       	bld	r25, 7
 302:	9f 67       	ori	r25, 0x7F	; 127
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	08 95       	ret

0000030c <__fp_nan>:
 30c:	9f ef       	ldi	r25, 0xFF	; 255
 30e:	80 ec       	ldi	r24, 0xC0	; 192
 310:	08 95       	ret

00000312 <__fp_pscA>:
 312:	00 24       	eor	r0, r0
 314:	0a 94       	dec	r0
 316:	16 16       	cp	r1, r22
 318:	17 06       	cpc	r1, r23
 31a:	18 06       	cpc	r1, r24
 31c:	09 06       	cpc	r0, r25
 31e:	08 95       	ret

00000320 <__fp_pscB>:
 320:	00 24       	eor	r0, r0
 322:	0a 94       	dec	r0
 324:	12 16       	cp	r1, r18
 326:	13 06       	cpc	r1, r19
 328:	14 06       	cpc	r1, r20
 32a:	05 06       	cpc	r0, r21
 32c:	08 95       	ret

0000032e <__fp_round>:
 32e:	09 2e       	mov	r0, r25
 330:	03 94       	inc	r0
 332:	00 0c       	add	r0, r0
 334:	11 f4       	brne	.+4      	; 0x33a <__fp_round+0xc>
 336:	88 23       	and	r24, r24
 338:	52 f0       	brmi	.+20     	; 0x34e <__fp_round+0x20>
 33a:	bb 0f       	add	r27, r27
 33c:	40 f4       	brcc	.+16     	; 0x34e <__fp_round+0x20>
 33e:	bf 2b       	or	r27, r31
 340:	11 f4       	brne	.+4      	; 0x346 <__fp_round+0x18>
 342:	60 ff       	sbrs	r22, 0
 344:	04 c0       	rjmp	.+8      	; 0x34e <__fp_round+0x20>
 346:	6f 5f       	subi	r22, 0xFF	; 255
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	8f 4f       	sbci	r24, 0xFF	; 255
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	08 95       	ret

00000350 <_exit>:
 350:	f8 94       	cli

00000352 <__stop_program>:
 352:	ff cf       	rjmp	.-2      	; 0x352 <__stop_program>
